import dedent from 'dedent'
import { stateBuilder, watermarkTransform } from './utils/testing'

describe('watermarks', () => {
  it('adds a watermark at the top', async () => {
    const src = ``
    const expected = dedent`/** @typescriptify */
    /** 
    THIS FILE IS AUTOMATICALLY GENERATED. Do not edit this file.
    If you want to manually write flow types for this file,
    remove the @typescriptify annotation and this comment block.
    */`
    expect((await watermarkTransform(src)).trim()).toBe(expected.trim())
  })

  it('Preserves existing comments', async () => {
    const src = dedent`// copyright stripe 2021
    const a = 1 + 1;`
    const expected = dedent`/** @typescriptify */
    /** 
    THIS FILE IS AUTOMATICALLY GENERATED. Do not edit this file.
    If you want to manually write flow types for this file,
    remove the @typescriptify annotation and this comment block.
    */


    // copyright stripe 2021
    const a = 1 + 1;`
    expect((await watermarkTransform(src)).trim()).toBe(expected.trim())
  })

  it('Respects state', async () => {
    const src = ``
    const expected = dedent`/** @test */
    /** Test message*/`

    const state = stateBuilder({
      config: {
        filePath: './fake/test.js',
        isTestFile: true,
        watermark: '@test',
        watermarkMessage: `Test message`,
      },
    })
    expect((await watermarkTransform(src, state)).trim()).toBe(expected.trim())
  })
})
